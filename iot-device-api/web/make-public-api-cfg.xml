<?xml version="1.0" encoding="UTF-8"?>

<!--
   IOTDEVICEAPI
   Copyright (C) 2017 DISIT Lab http://www.disit.org - University of Florence

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License as
   published by the Free Software Foundation, either version 3 of the
   License, or (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Affero General Public License for more details.

   You should have received a copy of the GNU Affero General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
   
<api-cfg xmlns="http://www.disit.org/ServiceMap/api/v1/iot">

	<!-- Administrative configurations, such as logging indications and similar -->
	
	<admin>
		<xlogs destination="/iot-log2/make-public">
			<xlog-level class="org.disit.iotdeviceapi.MakePublic" level="INFO"/>
			<xlog-level class="org.disit.iotdeviceapi.config.ConfigParser" level="INFO"/>
			<xlog-level class="org.disit.iotdeviceapi.providers.request.RequestProvider" level="SEVERE"/>
			<xlog-level class="org.disit.iotdeviceapi.builders.constb.ConstBuilder" level="SEVERE"/>
			<xlog-level class="org.disit.iotdeviceapi.builders.template.TemplateBuilder" level="SEVERE"/>
			<xlog-level class="org.disit.iotdeviceapi.builders.lookup.LookupBuilder" level="SEVERE"/>
			<xlog-level class="org.disit.iotdeviceapi.builders.bean.BeanBuilder" level="SEVERE"/>
			<xlog-level class="org.disit.iotdeviceapi.loaders.virtuoso.VirtuosoLoader" level="INFO"/>
			<xlog-level class="org.disit.iotdeviceapi.dataquality.basic.BasicValidator" level="INFO"/>
                        <xlog-level class="org.disit.iotdeviceapi.providers.virtuoso.VirtuosoProvider" level="INFO"/>
		</xlogs>
	</admin>
	
	<!-- A repo is where the data can be read from and/or written to -->
	
	<repos>
		<repo id="virtuoso">
			<param key="virtuosoEndpoint" value="localhost:1111"/>
			<param key="virtuosoUser" value="dba"/>
			<param key="virtuosoPwd" value="dba"/>
			<param key="virtuosoTimeout" value="600"/>
			<param key="virtuosoDeleteInsert" value="property"/>
		</repo>
	</repos>

	<!-- A provider is a software component that retrieves data from a data source -->
	
	<providers>
		<provider id="request" class="org.disit.iotdeviceapi.providers.request.RequestProvider" repo="{request}" />
                <provider id="virtuoso-provider" class="org.disit.iotdeviceapi.providers.virtuoso.VirtuosoProvider" repo="virtuoso" />
	</providers>
	
	<!-- A builder is a software component that produces data through a defined procedure -->
	
	<builders>
		<builder id="const" class="org.disit.iotdeviceapi.builders.constb.ConstBuilder"/>
		<builder id="template" class="org.disit.iotdeviceapi.builders.template.TemplateBuilder"/>
		<builder id="lookup" class="org.disit.iotdeviceapi.builders.lookup.LookupBuilder"/>
		<builder id="bean" class="org.disit.iotdeviceapi.builders.bean.BeanBuilder"/>
		<builder id="jsonp" class="org.disit.iotdeviceapi.builders.jsonparser.JsonParser"/>
                <builder id="alternative" class="org.disit.iotdeviceapi.builders.alternative.AlternativeBuilder"/>
	</builders>
	
	<!-- Data types are the expected types of the pieces of data that are built along the process, each represented through a high-level context-dependent name, and a low-level Java class. -->

	<datatypes>
		<datatype id="string" class="org.disit.iotdeviceapi.datatypes.StringWrapper"/>
		<datatype id="uri" class="org.disit.iotdeviceapi.datatypes.UrlWrapper"/>
		<datatype id="quad" class="org.disit.iotdeviceapi.datatypes.Quad"/>
		<datatype id="bool" class="org.disit.iotdeviceapi.datatypes.BoolWrapper"/>
	</datatypes>
	
	<!-- A Loader is a software component that persists pieces of data -->
	
	<loaders>
		<loader id="virtuoso" class="org.disit.iotdeviceapi.loaders.virtuoso.VirtuosoLoader" repo="virtuoso">
			<formattings>
				<formatting ref="string">&quot;{0}&quot;</formatting>
				<formatting ref="integer">&quot;{0}&quot;^^&lt;http://www.w3.org/2001/XMLSchema#integer&gt;</formatting>
				<formatting ref="float">&quot;{0}&quot;^^&lt;http://www.w3.org/2001/XMLSchema#float&gt;</formatting>
                                <formatting ref="bool">&quot;{0}&quot;^^&lt;http://www.w3.org/2001/XMLSchema#boolean&gt;</formatting>
				<formatting ref="uri">&lt;{0}&gt;</formatting>
				<formatting ref="geometry">&quot;{0}&quot;^^&lt;http://www.openlinksw.com/schemas/virtrdf#Geometry&gt;</formatting>
			</formattings>
		</loader>
	</loaders>
	
	<!-- 
		Data quality: validators and data checks are defined here.
		Data checks are performed after the data building, and before the data loading. 
	-->
	
	<data-quality>
	
		<validators>
			<validator id="basic" class="org.disit.iotdeviceapi.dataquality.basic.BasicValidator"/>
		</validators>
		
		<validations>
                        
                    <validate ref="uri-exists">
                        <pick-validator ref="basic">
                            <min-cardinality id="uri-exists.min-cardinality.1" lev="SEVERE">1</min-cardinality>
                        </pick-validator>
                    </validate>

		</validations>
		
	</data-quality>

	<!-- 
		The computation process is made up of a set of data building stages, that include possible data loading. 
		At each computation stage, before the data loading, possible data quality checks are performed (see data-quality above). 
	-->
	
	<process>
	
		<data id="request-body" type="string" builder="lookup" loader="volatile">
			<lookup>
				<priority>1</priority>
				<provider>request</provider>
				<query>{raw}</query>
			</lookup>
		</data>
		
		<data id="graph-uri" type="uri" builder="const" loader="volatile">http://www.disit.org/km4city/resource/iot-data</data>
		
                <data id="service-uri" type="uri" builder="jsonp" loader="volatile" output="true">
                    	<source ref="request-body"/>
			<query>uri</query>
                </data>
                
                <data id="is-a" type="uri" builder="const" loader="volatile">http://www.w3.org/1999/02/22-rdf-syntax-ns#type</data>

		<!-- <data id="iot-sensor-uri" type="uri" builder="const" loader="volatile">http://www.disit.org/km4city/schema#IoTSensor</data> -->
                <data id="iot-sensor-uri" type="uri" builder="const" loader="volatile">http://www.w3.org/ns/sosa/Sensor</data>
		
		<data id="iot-actuator-uri" type="uri" builder="const" loader="volatile">http://www.disit.org/km4city/schema#IoTActuator</data>

                <data id="query-uri-is-a-sensor" type="string" builder="template" loader="volatile">
			<template>select * '{' graph &lt;{0}&gt; '{' &lt;{1}&gt; &lt;{2}&gt; &lt;{3}&gt; ; ?p ?v '}' '}'  </template>
			<param index="0" value="graph-uri"/>
			<param index="1" value="service-uri"/>
                        <param index="2" value="is-a"/>
                        <param index="3" value="iot-sensor-uri"/>
                </data>
                
                <data id="query-uri-is-an-actuator" type="string" builder="template" loader="volatile">
			<template>select * '{' graph &lt;{0}&gt; '{' &lt;{1}&gt; &lt;{2}&gt; &lt;{3}&gt; ; ?p ?v '}' '}'  </template>
			<param index="0" value="graph-uri"/>
			<param index="1" value="service-uri"/>
                        <param index="2" value="is-a"/>
                        <param index="3" value="iot-actuator-uri"/>
                </data>
                
                <data id="uri-is-a-sensor" type="string" builder="lookup" loader="volatile">
			<lookup>
				<priority>1</priority>
				<provider>virtuoso-provider</provider>
				<query ref="query-uri-is-a-sensor" />
			</lookup>
		</data>
                
                <data id="uri-is-an-actuator" type="string" builder="lookup" loader="volatile">
			<lookup>
				<priority>1</priority>
				<provider>virtuoso-provider</provider>
				<query ref="query-uri-is-an-actuator" />
			</lookup>
		</data>
                
                <data id="uri-exists" type="string" builder="alternative" loader="volatile">
                    <alternative ref="uri-is-a-sensor"/>
                    <alternative ref="uri-is-an-actuator"/>
                </data>
                
                <data id="avail-property-uri" type="uri" builder="const" loader="volatile">http://www.disit.org/km4city/schema#ownership</data>
                
                <data id="string-public" type="string" builder="const" loader="volatile">public</data>
                
                <data id="graph-uri.service-uri.avail-property-uri.string-public" type="quad" builder="bean" loader="virtuoso">
			<member name="graph" ref="graph-uri"/> 
			<member name="subject" ref="service-uri"/> 
			<member name="property" ref="avail-property-uri"/>
			<member name="filler" ref="string-public"/> 
		</data>
                
	</process>

</api-cfg>