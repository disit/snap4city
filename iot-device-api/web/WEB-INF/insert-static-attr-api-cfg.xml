<?xml version="1.0" encoding="UTF-8"?>

<!--
   IOTDEVICEAPI
   Copyright (C) 2017 DISIT Lab http://www.disit.org - University of Florence

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License as
   published by the Free Software Foundation, either version 3 of the
   License, or (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Affero General Public License for more details.

   You should have received a copy of the GNU Affero General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<!DOCTYPE api-cfg SYSTEM "iotdeviceapi.dtd">
   
<api-cfg xmlns="http://www.disit.org/ServiceMap/api/v1/iot">

        <!-- Sample request -->
        
        <!--
            {
                "graph": "http://www.disit.org/km4city/resource/Ontology",
                "subnature": "http://www.disit.org/km4city/schema#Smart_street_light",
                "attribute": "http://www.disit.org/km4city/schema#address",
                "range": "http://www.w3.org/2001/XMLSchema#string",
                "label": [
                    {
                        "text": "Address",
                        "lang": "en"
                    },
                    {
                        "text": "Indirizzo",
                        "lang": "it"
                    }                    
                ]
            }
        -->
        
	<!-- Administrative configurations, such as logging indications and similar -->
	
	<admin>
		<xlogs destination="/iot-log2/move">
			<xlog-level class="org.disit.iotdeviceapi.Move" level="INFO"/>
			<xlog-level class="org.disit.iotdeviceapi.config.ConfigParser" level="INFO"/>
			<xlog-level class="org.disit.iotdeviceapi.providers.request.RequestProvider" level="SEVERE"/>
			<xlog-level class="org.disit.iotdeviceapi.builders.constb.ConstBuilder" level="SEVERE"/>
			<xlog-level class="org.disit.iotdeviceapi.builders.template.TemplateBuilder" level="SEVERE"/>
			<xlog-level class="org.disit.iotdeviceapi.builders.switchb.SwitchBuilder" level="SEVERE"/>
			<xlog-level class="org.disit.iotdeviceapi.builders.lookup.LookupBuilder" level="SEVERE"/>
			<xlog-level class="org.disit.iotdeviceapi.builders.bean.BeanBuilder" level="SEVERE"/>
			<xlog-level class="org.disit.iotdeviceapi.loaders.virtuoso.VirtuosoLoader" level="INFO"/>
			<xlog-level class="org.disit.iotdeviceapi.dataquality.basic.BasicValidator" level="INFO"/>
                        <xlog-level class="org.disit.iotdeviceapi.providers.virtuoso.VirtuosoProvider" level="INFO"/>
		</xlogs>
	</admin>
	
	<!-- A repo is where the data can be read from and/or written to -->
	
	<repos>
		<repo id="virtuoso">
			<param key="virtuosoEndpoint" value="&virtUrl;"/>
			<param key="virtuosoUser" value="&virtUsr;"/>
			<param key="virtuosoPwd" value="&virtPwd;"/>
			<param key="virtuosoTimeout" value="600"/>
			<param key="virtuosoDeleteInsert" value="property"/>
		</repo>
	</repos>

	<!-- A provider is a software component that retrieves data from a data source -->
	
	<providers>
		<provider id="request" class="org.disit.iotdeviceapi.providers.request.RequestProvider" repo="{request}" />
                <provider id="virtuoso-provider" class="org.disit.iotdeviceapi.providers.virtuoso.VirtuosoProvider" repo="virtuoso" />
	</providers>
	
	<!-- A builder is a software component that produces data through a defined procedure -->
	
	<builders>
		<builder id="const" class="org.disit.iotdeviceapi.builders.constb.ConstBuilder"/>
		<builder id="template" class="org.disit.iotdeviceapi.builders.template.TemplateBuilder"/>
		<builder id="switch" class="org.disit.iotdeviceapi.builders.switchb.SwitchBuilder"/>
		<builder id="lookup" class="org.disit.iotdeviceapi.builders.lookup.LookupBuilder"/>
		<builder id="bean" class="org.disit.iotdeviceapi.builders.bean.BeanBuilder"/>
		<builder id="jsonp" class="org.disit.iotdeviceapi.builders.jsonparser.JsonParser"/>
		<builder id="alternative" class="org.disit.iotdeviceapi.builders.alternative.AlternativeBuilder"/>
	</builders>
	
	<!-- Data types are the expected types of the pieces of data that are built along the process, each represented through a high-level context-dependent name, and a low-level Java class. -->

	<datatypes>
		<datatype id="string" class="org.disit.iotdeviceapi.datatypes.StringWrapper"/>
		<datatype id="integer" class="org.disit.iotdeviceapi.datatypes.IntWrapper"/>
		<datatype id="float" class="org.disit.iotdeviceapi.datatypes.FloatWrapper"/>
		<datatype id="uri" class="org.disit.iotdeviceapi.datatypes.UrlWrapper"/>
		<datatype id="quad" class="org.disit.iotdeviceapi.datatypes.Quad"/>
		<datatype id="geometry" class="org.disit.iotdeviceapi.datatypes.StringWrapper"/>
                <datatype id="bool" class="org.disit.iotdeviceapi.datatypes.BoolWrapper"/>
                <datatype id="localized-string" class="org.disit.iotdeviceapi.datatypes.LocalizedString"/>
	</datatypes>
	
	<!-- A Loader is a software component that persists pieces of data -->
	
	<loaders>
		<loader id="virtuoso" class="org.disit.iotdeviceapi.loaders.virtuoso.VirtuosoLoader" repo="virtuoso">
			<formattings>
				<formatting ref="string">&quot;{0}&quot;</formatting>                                
				<formatting ref="integer">&quot;{0}&quot;^^&lt;http://www.w3.org/2001/XMLSchema#integer&gt;</formatting>
				<formatting ref="float">&quot;{0}&quot;^^&lt;http://www.w3.org/2001/XMLSchema#float&gt;</formatting>
				<formatting ref="uri">&lt;{0}&gt;</formatting>
				<formatting ref="geometry">&quot;{0}&quot;^^&lt;http://www.openlinksw.com/schemas/virtrdf#Geometry&gt;</formatting>
                                <formatting ref="bool">&quot;{0}&quot;^^&lt;http://www.w3.org/2001/XMLSchema#boolean&gt;</formatting>
                                <formatting ref="localized-string">{0}</formatting>
			</formattings>
		</loader>
	</loaders>
	
	<!-- 
		Data quality: validators and data checks are defined here.
		Data checks are performed after the data building, and before the data loading. 
	-->
	
	<data-quality>
	
		<validators>
			<validator id="basic" class="org.disit.iotdeviceapi.dataquality.basic.BasicValidator"/>
                        <validator id="validateToken" class="org.disit.iotdeviceapi.dataquality.security.ValidateToken"/>
		</validators>
		
		<validations>
			
                        <validate ref="privileges-check">
                            <pick-validator ref="basic" description="Must authenticate. Send HTTP header Authorization: Bearer [token].">
                                    <min-cardinality id="authorization.min-cardinality" lev="SEVERE">1</min-cardinality>
                                    <max-cardinality id="authorization.max-cardinality" lev="SEVERE">1</max-cardinality>
                            </pick-validator>
                            <pick-validator ref="validateToken" description="The access token must be a valid access token of a root user.">
                                <endpoint>&keycloak;</endpoint>
                                <authorization ref="authorization"/>
                                <roles>RootAdmin</roles>	
                            </pick-validator>	
                        </validate>  	
                        
                        <validate ref="graph">
                            <pick-validator ref="basic" description="The graph URI is invalid or not present.">
                                    <min-cardinality id="authorization.min-cardinality" lev="SEVERE">1</min-cardinality>
                                    <max-cardinality id="authorization.max-cardinality" lev="SEVERE">1</max-cardinality>
                            </pick-validator>                          
                        </validate>  
                        
                        <validate ref="subnature">
                            <pick-validator ref="basic" description="The subnature URI is invalid or not present.">
                                    <min-cardinality id="authorization.min-cardinality" lev="SEVERE">1</min-cardinality>
                                    <max-cardinality id="authorization.max-cardinality" lev="SEVERE">1</max-cardinality>
                            </pick-validator>                          
                        </validate>  
                        
                        <validate ref="attribute">
                            <pick-validator ref="basic" description="The attribute URI is invalid or not present.">
                                    <min-cardinality id="authorization.min-cardinality" lev="SEVERE">1</min-cardinality>
                                    <max-cardinality id="authorization.max-cardinality" lev="SEVERE">1</max-cardinality>
                            </pick-validator>                          
                        </validate>  
                        
                        <validate ref="label">
                            <pick-validator ref="basic" description="One label at least must be present.">
                                    <min-cardinality id="authorization.min-cardinality" lev="SEVERE">1</min-cardinality>
                            </pick-validator>                          
                        </validate> 

		</validations>
		
	</data-quality>

	<!-- 
		The computation process is made up of a set of data building stages, that include possible data loading. 
		At each computation stage, before the data loading, possible data quality checks are performed (see data-quality above). 
	-->
	
	<process>
	
		<data id="request-body" type="string" builder="lookup" loader="volatile">
			<lookup>
				<priority>1</priority>
				<provider>request</provider>
				<query>{raw}</query>
			</lookup>
		</data>
                
                <data id="authorization" type="string" builder="lookup" loader="volatile">
			<lookup>
				<priority>1</priority>
				<provider>request</provider>
				<query>authorization</query>
			</lookup>                    
                </data> 
                
                <data id="privileges-check" type="string" builder="const" loader="volatile"></data>          
				
                <data id="graph" type="uri" builder="jsonp" loader="volatile">
                    <source ref="request-body"/>
                    <query>graph</query>
                </data>
                
                <data id="subnature" type="uri" builder="jsonp" loader="volatile">
                    <source ref="request-body"/>
                    <query>subnature</query>
		</data>	     
                              
                <data id="attribute" type="uri" builder="jsonp" loader="volatile" output="true">
                    <source ref="request-body"/>
                    <query>attribute</query>
                </data>
                
                <data id="range" type="uri" builder="jsonp" loader="volatile">
                    <source ref="request-body"/>
                    <query>range</query>
                </data>
                
                <data id="label-text" type="string" builder="jsonp" loader="volatile">
                    <source ref="request-body"/>
                    <query>label.text</query>
                </data>             
                
                <data id="label-lang" type="string" builder="jsonp" loader="volatile">
                    <source ref="request-body"/>
                    <query>label.lang</query>
                </data>
                
                <data id="label" type="localized-string" builder="template" loader="volatile">
			<template>&quot;{0}&quot;@{1}</template>
			<param index="0" value="label-text"/>
                        <param index="1" value="label-lang"/>
		</data>
                                
		<data id="rdfs-domain" type="uri" builder="const" loader="volatile">http://www.w3.org/2000/01/rdf-schema#domain</data>
                
                <data id="rdfs-range" type="uri" builder="const" loader="volatile">http://www.w3.org/2000/01/rdf-schema#range</data>
		
		<data id="rdfs-label" type="uri" builder="const" loader="volatile">http://www.w3.org/2000/01/rdf-schema#label</data>
		
		<data id="graph.attribute.rdfs-domain.subnature" type="quad" builder="bean" loader="virtuoso">
			<member name="graph" ref="graph"/> 
			<member name="subject" ref="attribute"/> 
			<member name="property" ref="rdfs-domain"/>
			<member name="filler" ref="subnature"/> 
		</data>		
		
		<data id="graph.attribute.rdfs-range.range" type="quad" builder="bean" loader="virtuoso">
			<member name="graph" ref="graph"/> 
			<member name="subject" ref="attribute"/> 
			<member name="property" ref="rdfs-range"/>
			<member name="filler" ref="range"/> 
		</data>		
                
		<data id="graph.attribute.rdfs-label.label" type="quad" builder="bean" loader="virtuoso">
			<member name="graph" ref="graph"/> 
			<member name="subject" ref="attribute"/> 
			<member name="property" ref="rdfs-label"/>
			<member name="filler" ref="label"/> 
		</data>	
		               
	</process>

</api-cfg>
 