{
  "openapi": "3.0.1",
  "info": {
    "title": "Resource Manager API v8",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://processloader.snap4city.org/processloader/api"
    }
  ],
  "paths": {
    "/dictionary": {
      "get": {
        "tags": [
          "Dictionary"
        ],
        "summary": "gets list of dictionary elements as nature, subnature, valueunit, datatype",
        "description": "\nA remarkable note about the __user__ and __status__ parameters:\n\n* This API doesn't require any Accetoken\n",
        "parameters": [
          {
            "name": "get_all",
            "in": "query",
            "description": "Returns all the elements of the dictionary, each with its own parents and children",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Resource ID",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": 300
          },
          {
            "name": "type",
            "in": "query",
            "description": "Returns all elements of a type (nature, subnature, valueunit, datatype). API accepts type written in different ways, such as 'sub nature', 'sub_nature', 'value unit', 'value_unit', 'data type', 'data_type, datatype'",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "nature",
                "subnature",
                "datatype",
                "valueunit"
              ]
            },
            "example": "nature"
          },
          {
            "name": "child",
            "in": "query",
            "description": "Returns the elements of the dictionary of a specific type filter by the id of a child, it required also the parameter **type=nature**",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": 40
          },
          {
            "name": "parent",
            "in": "query",
            "description": "Returns the elements of the dictionary of a specific type filter by the id of a parent, it required also the parameter **type=subnature**, **type=datatype** or **type=valueunit**",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": 2
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON is returned that contains the resource data (also including the attached compressed file if it can be found). The content of some fields varies depending on the type, so the example has only the purpose of showing the contents of all the fields of the response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "The HTTP response status code.",
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        200
                      ]
                    },
                    "result": {
                      "description": "The textual description of the HTTP response status code.",
                      "type": "string",
                      "enum": [
                        "Ok"
                      ]
                    },
                    "content": {
                      "$ref": "#/components/schemas/metadata"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found data."
          },
          "500": {
            "description": "DB Connection error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "metadata": {
        "description": "Metadata about the resource of interest, identified through its unique identifier.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Resource title ID.",
            "type": "string",
            "example": 21
          },
          "value": {
            "description": "Resource value.",
            "type": "string",
            "example": "Agritourism"
          },
          "label": {
            "description": "Resource value.",
            "type": "string",
            "example": "Agritourism"
          },
          "type": {
            "description": "Resource KM4City Sub Category.",
            "type": "string",
            "example": "subnature"
          },
          "data_type_id": {
            "description": "Array Id of a data type, it contains values just when type = valuetype",
            "type": "object",
            "example": [
              "918",
              "919"
            ]
          },
          "data_type_value": {
            "description": "Array value of a data typeit contains values just when type = valuetype",
            "type": "object",
            "format": "string",
            "example": [
              "float",
              "integer"
            ]
          },
          "parent_id": {
            "description": "Array of id of parent elements, it contains values just when type = subnature or type = datatype",
            "type": "object",
            "example": [
              "1"
            ]
          },
          "parent_value": {
            "description": "Array of values of parent elements, it contains values just when type = subnature or type = datatype",
            "type": "object",
            "example": [
              "Accommodation"
            ]
          },
          "children_id": {
            "description": "Array of id of child elements, it contains values just when type = nature or type = valuetype",
            "type": "object",
            "example": [
              "983",
              "934",
              "988",
              "635"
            ]
          },
          "children_value": {
            "description": "Array of value of child elements, it contains values just when type = nature or type = valuetype",
            "type": "object",
            "example": [
              "ActionUrl",
              "datastructure",
              "Geometry",
              "latitude_longitude"
            ]
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Process Loader home page",
    "url": "http://processloader.snap4city.org"
  }
}