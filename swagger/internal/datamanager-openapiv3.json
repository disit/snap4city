{
  "openapi": "3.0.1",
  "info": {
    "title": "Data Manager API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://{hostname}/datamanager/api/v1",
      "variables": {
        "hostname": {
          "default": "localhost"
        }
      }
    }
  ],
  "paths": {
    "/apps/{APPID}/data": {
      "get": {
        "tags": [
          "From IoT App"
        ],
        "summary": "Get data from IoT app",
        "parameters": [
          {
            "$ref": "#/components/parameters/sourceRequest"
          },
          {
            "$ref": "#/components/parameters/lang"
          },
          {
            "$ref": "#/components/parameters/from"
          },
          {
            "$ref": "#/components/parameters/to"
          },
          {
            "$ref": "#/components/parameters/first"
          },
          {
            "$ref": "#/components/parameters/last"
          },
          {
            "$ref": "#/components/parameters/delegated"
          },
          {
            "$ref": "#/components/parameters/variableName"
          },
          {
            "$ref": "#/components/parameters/motivation"
          },
          {
            "$ref": "#/components/parameters/anonymous"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/getData"
          },
          "400": {
            "description": "A delegation cannot be found."
          }
        }
      },
      "post": {
        "tags": [
          "From IoT App"
        ],
        "summary": "Send data that belong to the indicated APPID.",
        "description": "The possible properties _insertTime_, _deleteTime_, _elapseTime_ that could be found in the input JSON would be ignored, and overriden by values generated by the receiving server. If the __uid__ is missing, the __APPID__ is leveraged.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "dataTime",
                  "APPID",
                  "motivation",
                  "variableName",
                  "variableValue",
                  "variableUnit",
                  "sourceRequest"
                ],
                "properties": {
                  "dataTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The timestamp to be associated to the submitted data.",
                    "example": 1521021146000
                  },
                  "APPID": {
                    "type": "string",
                    "description": "The APPID to which the submitted data belong.",
                    "example": "f52b8e936ba2c0a23a6c059055546f1011d19df1305667aa25300b732a09f9eb"
                  },
                  "motivation": {
                    "type": "string",
                    "description": "The motivation for which the data have been originated.",
                    "example": "TIPO5"
                  },
                  "variableName": {
                    "type": "string",
                    "description": "The name of the submitted variable.",
                    "example": "LAT"
                  },
                  "variableValue": {
                    "type": "string",
                    "description": "The value of the submitted variable.",
                    "example": 43.11
                  },
                  "variableUnit": {
                    "type": "string",
                    "description": "The unit of the submitted variable.",
                    "example": "coord"
                  },
                  "sourceRequest": {
                    "type": "string",
                    "description": "The application that has originated the submitted data.",
                    "example": "iotapp"
                  },
                  "lang": {
                    "type": "string",
                    "description": "Language of the submitted data. It defaults to English.",
                    "default": "en",
                    "example": "en"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A JSON document where the inserted/updated data can be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "example": 34
                    },
                    "uid": {
                      "type": "string",
                      "example": 1
                    },
                    "dataTime": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1521021146000
                    },
                    "APPID": {
                      "type": "string",
                      "example": "f52b8e936ba2c0a23a6c059055546f1011d19df1305667aa25300b732a09f9eb"
                    },
                    "motivation": {
                      "type": "string",
                      "example": "TIP05"
                    },
                    "variableName": {
                      "type": "string",
                      "example": "LAT"
                    },
                    "variableValue": {
                      "type": "string",
                      "example": 43.11
                    },
                    "variableUnit": {
                      "type": "string",
                      "example": "coord"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "If the property \"id\" can be found in the input JSON, a \"Bad Request\" error is returned."
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/APPID"
        }
      ]
    },
    "/apps/{APPID}/consents": {
      "get": {
        "tags": [
          "From IoT App"
        ],
        "summary": "Get the consents that belong to the indicated APPID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "responses": {
          "200": {
            "description": "If the consents are successfully found, their JSON representation is provided to the user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                      },
                      "uid": {
                        "type": "string",
                        "example": 66
                      },
                      "APPID": {
                        "type": "string",
                        "example": "e08947edc33de9919eb3c7e11a5deaabf0cbc7acf70e9b9549932ef3bd55f452"
                      },
                      "value": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "APPID",
          "in": "path",
          "description": "The __APPID__ to which the data belong.",
          "required": true,
          "schema": {
            "type": "string"
          },
          "example": "6ff3a0ea0a5d92f345fa13c95d0b35ff77204413b9c98e3a71b1d269a26af11e"
        }
      ]
    },
    "/apps/{APPID}/delegated": {
      "get": {
        "tags": [
          "From IoT App"
        ],
        "summary": "Return all the delegations that have been given to the user that holds the indicated APPID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/APPID"
          },
          {
            "$ref": "#/components/parameters/sourceRequest"
          },
          {
            "$ref": "#/components/parameters/variableName"
          },
          {
            "$ref": "#/components/parameters/motivation"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/delegations"
          }
        }
      }
    },
    "/apps/{APPID}/delegator": {
      "get": {
        "tags": [
          "From IoT App"
        ],
        "summary": "Return all the delegations that the specified APPID has given.",
        "parameters": [
          {
            "$ref": "#/components/parameters/APPID"
          },
          {
            "$ref": "#/components/parameters/sourceRequest"
          },
          {
            "$ref": "#/components/parameters/variableName"
          },
          {
            "$ref": "#/components/parameters/motivation"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/delegations"
          }
        }
      }
    },
    "/username/{USERNAME}/data": {
      "get": {
        "tags": [
          "From Username"
        ],
        "summary": "Get data from username",
        "parameters": [
          {
            "$ref": "#/components/parameters/sourceRequest"
          },
          {
            "$ref": "#/components/parameters/lang"
          },
          {
            "$ref": "#/components/parameters/from"
          },
          {
            "$ref": "#/components/parameters/to"
          },
          {
            "$ref": "#/components/parameters/first"
          },
          {
            "$ref": "#/components/parameters/last"
          },
          {
            "$ref": "#/components/parameters/delegated"
          },
          {
            "$ref": "#/components/parameters/variableName"
          },
          {
            "$ref": "#/components/parameters/motivation"
          },
          {
            "$ref": "#/components/parameters/anonymous"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/getData"
          },
          "400": {
            "description": "A delegation cannot be found."
          }
        }
      },
      "post": {
        "tags": [
          "From Username"
        ],
        "summary": "Send data that belong to the indicated USERNAME.",
        "description": "The possible properties _insertTime_, _deleteTime_, _elapseTime_ that could be found in the input JSON would be ignored, and overriden by values generated by the receiving server. If the __uid__ is missing, the __APPID__ is leveraged.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "dataTime",
                  "motivation",
                  "variableName",
                  "variableValue",
                  "variableUnit",
                  "sourceRequest"
                ],
                "properties": {
                  "dataTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The timestamp to be associated to the submitted data.",
                    "example": 1521021146000
                  },
                  "motivation": {
                    "type": "string",
                    "description": "The motivation for which the data have been originated.",
                    "example": "TIPO5"
                  },
                  "variableName": {
                    "type": "string",
                    "description": "The name of the submitted variable.",
                    "example": "LAT"
                  },
                  "variableValue": {
                    "type": "string",
                    "description": "The value of the submitted variable.",
                    "example": 43.11
                  },
                  "variableUnit": {
                    "type": "string",
                    "description": "The unit of the submitted variable.",
                    "example": "coord"
                  },
                  "sourceRequest": {
                    "type": "string",
                    "description": "The application that has originated the submitted data.",
                    "example": "iotapp"
                  },
                  "lang": {
                    "type": "string",
                    "description": "Language of the submitted data. It defaults to English.",
                    "default": "en",
                    "example": "en"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A JSON document where the inserted/updated data can be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "example": 34
                    },
                    "username": {
                      "type": "string",
                      "example": "adifino"
                    },
                    "dataTime": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1521021146000
                    },
                    "motivation": {
                      "type": "string",
                      "example": "TIP05"
                    },
                    "variableName": {
                      "type": "string",
                      "example": "LAT"
                    },
                    "variableValue": {
                      "type": "string",
                      "example": 43.11
                    },
                    "variableUnit": {
                      "type": "string",
                      "example": "coord"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "If the property \"id\" can be found in the input JSON, a \"Bad Request\" error is returned."
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/USERNAME"
        }
      ]
    },
    "/username/{USERNAME}/delegated": {
      "get": {
        "tags": [
          "From Username"
        ],
        "summary": "Returns the delegations of the user identified by the USERNAME parameter.",
        "parameters": [
          {
            "$ref": "#/components/parameters/USERNAME"
          },
          {
            "$ref": "#/components/parameters/sourceRequest"
          },
          {
            "$ref": "#/components/parameters/variableName"
          },
          {
            "$ref": "#/components/parameters/motivation"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/delegations"
          }
        }
      }
    },
    "/ausername/{USERNAME}/delegator": {
      "get": {
        "tags": [
          "From Username"
        ],
        "summary": "Return all the delegations that the user with the indicated USERNAME has given.",
        "parameters": [
          {
            "$ref": "#/components/parameters/USERNAME"
          },
          {
            "$ref": "#/components/parameters/sourceRequest"
          },
          {
            "$ref": "#/components/parameters/variableName"
          },
          {
            "$ref": "#/components/parameters/motivation"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/delegations"
          }
        }
      }
    },
    "/username/{USERNAME}/delegations/check": {
      "get": {
        "tags": [
          "From Username"
        ],
        "summary": "This API checks if the indicated user has a delegation.",
        "description": "This API checks if the indicated user has been delegated for accessing the variable indicated through the parameter __variableName__, within the element indicated through the parameter __elementId__.",
        "parameters": [
          {
            "$ref": "#/components/parameters/USERNAME"
          },
          {
            "name": "elementId",
            "in": "query",
            "description": "The identifier of the element of interest.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "cab5c0cbf1585a072488954723e198c1c16f6fe3bb220120ba4a25416e7ed9a3"
          },
          {
            "name": "variableName",
            "in": "query",
            "description": "The name of the variable of interest within the element indicated by the _elementId_.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "latitude_longitude"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON document is returned in the response body, where it is indicated wheter the user has been delegated for accessing the variable of interest within the element of interest, or not.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "message"
                  ],
                  "properties": {
                    "result": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "DELEGATED",
                        "NOT DELEGATED"
                      ],
                      "example": "DELEGATED"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/username/{USERNAME}/delegation": {
      "post": {
        "tags": [
          "From Username"
        ],
        "summary": "Submit a delegation for a user, on behalf of the user identified through the USERNAME.",
        "parameters": [
          {
            "$ref": "#/components/parameters/USERNAME"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sourceRequest",
                  "usernameDelegated",
                  "elementId",
                  "elementType"
                ],
                "properties": {
                  "sourceRequest": {
                    "type": "string",
                    "example": "dashboardwizard"
                  },
                  "usernameDelegated": {
                    "type": "string",
                    "example": "badii"
                  },
                  "elementId": {
                    "type": "string",
                    "example": "f52b8e936ba2c0a23a6c059055546f1011d19df1305667aa25300b732a09f9eb"
                  },
                  "elementType": {
                    "type": "string",
                    "example": "DASHID"
                  },
                  "lang": {
                    "type": "string",
                    "default": "en",
                    "example": "en"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If the delegation is successfully stored, an HTTP status code 200 is returned, and a JSON representation of the new version of the delegation can be found in the response body. If  \"usernameDelegated\" is set to \"ANONYMOUS\", it indicates that it is a public/anonymous delegation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "example": 34
                    },
                    "username_delegated": {
                      "type": "string",
                      "example": "badii"
                    },
                    "elementId": {
                      "type": "string",
                      "example": "f52b8e936ba2c0a23a6c059055546f1011d19df1305667aa25300b732a09f9eb"
                    },
                    "elementType": {
                      "type": "string",
                      "example": "DASHID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "If the input JSON includes the property \"id\", an HTTP status code 400 is returned."
          }
        }
      }
    },
    "/username/{USERNAME}/delete/{DELEGATION_ID}": {
      "delete": {
        "tags": [
          "From Username"
        ],
        "summary": "Deletes a delegation.",
        "description": "Deletes the delegation that is identified through the parameter __DELEGATION_IT__ and that can be managed by the user identified through the parameter __USERNAME__.",
        "parameters": [
          {
            "$ref": "#/components/parameters/USERNAME"
          },
          {
            "name": "DELEGATION_ID",
            "in": "path",
            "description": "The username of the user on behalf of who the request is issued.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 31
          },
          {
            "$ref": "#/components/parameters/sourceRequest"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "responses": {
          "200": {
            "description": "If the delegation is successfully deleted, an HTTP status code 200 is returned."
          },
          "400": {
            "description": "If a delegation that is identified through the given DELEGATION_ID cannot be found, or the USERNAME identifies a user that cannot manage the delegation, an HTTP status code 400 is returned."
          }
        }
      }
    },
    "/apps/{APPID}/activity": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Returns the log of the activities that have been invoked by the application identified through the APPID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/APPID"
          },
          {
            "name": "delegated",
            "in": "query",
            "description": "If the parameter is set to _true_, just the activities in which a result includes a data from my container are returned.",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "example": false
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "responses": {
          "200": {
            "description": "An HTTP status code 200 is always returned, with a JSON document in the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32",
                      "example": 156
                    },
                    "time": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1526392725000
                    },
                    "appId": {
                      "type": "string",
                      "example": "f9208f95d7a81d04e7925bb9c7ed388fb9e0c2ce94dab850f55db554cc92c299"
                    },
                    "username": {
                      "type": "string",
                      "example": "badii"
                    },
                    "delegatedAppId": {
                      "type": "string",
                      "example": "244a29787d16e7ba720163890c87a76e05dfccfac835cc0fd2700ddf0480f137"
                    },
                    "delagatedUsername": {
                      "type": "string",
                      "example": "PaoloNesi"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/data": {
      "get": {
        "tags": [
          "From Outside"
        ],
        "summary": "Returns all the data.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sourceRequest"
          },
          {
            "$ref": "#/components/parameters/lang"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/getData"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "APPID": {
        "name": "APPID",
        "in": "path",
        "description": "The identifier of the application to which the data belong.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "6ff3a0ea0a5d92f345fa13c95d0b35ff77204413b9c98e3a71b1d269a26af11e"
      },
      "sourceRequest": {
        "name": "sourceRequest",
        "in": "query",
        "description": "It identifies the application that has originated the request (e.g. _iotapp_, _dashboardwizard_, _dashboardmanager_, and so on).",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "iotapp"
      },
      "variableName": {
        "name": "variableName",
        "in": "query",
        "description": "It indicates the name of the variable of interest. If the paramer is not sent, all variables are to be considered of interest.",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "LAT"
      },
      "motivation": {
        "name": "motivation",
        "in": "query",
        "description": "Motivation filter.",
        "required": false,
        "schema": {
          "type": "string"
        },
        "example": "TIPO5"
      },
      "lang": {
        "name": "lang",
        "in": "query",
        "description": "Language. It defaults to English.",
        "required": false,
        "schema": {
          "type": "string",
          "default": "en"
        },
        "example": "en"
      },
      "USERNAME": {
        "name": "USERNAME",
        "in": "path",
        "description": "The unique identifier of the user.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "6ff3a0ea0a5d92f345fa13c95d0b35ff77204413b9c98e3a71b1d269a26af11e"
      },
      "from": {
        "name": "from",
        "in": "query",
        "description": "Upper bound time period filter.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time",
          "example": "2018-05-22T11:35:20.000Z"
        }
      },
      "to": {
        "name": "to",
        "in": "query",
        "description": "Lower bound time period filter.",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        },
        "example": "2018-05-23T11:35:20.000Z"
      },
      "first": {
        "name": "first",
        "in": "query",
        "description": "If the parameter is provided, response is cut after the indicated number of entries. Entries are sorted by their timestamp, in _ascending_ order. If the parameter is not provided, zero is assumed, and all entries are returned. The maximum allowed value for this parameter is 100. This parameter cannot be sent together with the __last__ parameter.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "maximum": 100
        },
        "example": 0
      },
      "last": {
        "name": "last",
        "in": "query",
        "description": "If the parameter is provided, response is cut after the indicated number of entries. Entries are sorted by their timestamp, _descending_ order. If the parameter is not provided, zero is assumed, and all entries are returned. The maximum allowed value for this parameter is 100. This parameter cannot be sent together with the __first__ parameter.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "maximum": 100
        },
        "example": 0
      },
      "delegated": {
        "name": "delegated",
        "in": "query",
        "description": "It indicates whether the data have to be retrieved from the delegator user or not. It defaults to _false_.",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false
        },
        "example": false
      },
      "anonymous": {
        "name": "anonymous",
        "in": "query",
        "description": "If it is set to _true_, the only data that have been shared in _anonymous_ mode is returned.",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false
        },
        "example": false
      }
    },
    "responses": {
      "getData": {
        "description": "A JSON array with the retrieved data is returned.",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 32
                  },
                  "uid": {
                    "type": "string",
                    "example": 66
                  },
                  "dataTime": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1523289275000
                  },
                  "APPName": {
                    "type": "string",
                    "example": "nr28"
                  },
                  "APPID": {
                    "type": "string",
                    "example": "6ff3a0ea0a5d92f345fa13c95d0b35ff77204413b9c98e3a71b1d269a26af11e"
                  },
                  "motivation": {
                    "type": "string",
                    "example": "TIPO4"
                  },
                  "variableName": {
                    "type": "string",
                    "example": "LATITUDE"
                  },
                  "variableValue": {
                    "type": "string",
                    "example": 50.5
                  },
                  "variableUnit": {
                    "type": "string",
                    "example": "coord"
                  },
                  "uidName": {
                    "type": "string",
                    "example": "adifino"
                  }
                }
              }
            }
          }
        }
      },
      "delegations": {
        "description": "If the delegations can be found, an HTTP status code 200 is returned, and a JSON representation of the delegations can be found in the response body. If _usernameDelegated_ is set to _ANONYMOUS_, it means that it is a public/anonymous delegation. Also, if _appId_ and _appType_ are null/missing, it means that the delegation is valid for Annotation made by the user out of the IOT-APP context.",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "example": 20
                  },
                  "usernameDelegator": {
                    "type": "string",
                    "example": "badii"
                  },
                  "usernameDelegated": {
                    "type": "string",
                    "example": "snap4city"
                  },
                  "variableName": {
                    "type": "string",
                    "example": "latitude_longitude"
                  },
                  "motivation": {
                    "type": "string",
                    "example": "Shared Position"
                  },
                  "elementId": {
                    "type": "string",
                    "example": "f9208f95d7a81d04e7925bb9c7ed388fb9e0c2ce94dab850f55db554cc92c299"
                  },
                  "elementType": {
                    "type": "string",
                    "example": "AppID"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}